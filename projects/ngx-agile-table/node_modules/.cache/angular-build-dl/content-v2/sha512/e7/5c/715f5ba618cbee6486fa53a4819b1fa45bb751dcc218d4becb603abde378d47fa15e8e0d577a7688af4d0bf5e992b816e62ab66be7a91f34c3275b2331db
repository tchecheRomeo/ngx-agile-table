{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/ngx-agile-table/fesm2015/ngx-agile-table.js","./src/app/app.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6F;AACpC;AACZ;AACE;;AAE/C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAiBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,OAAO,sEAAY;AACxB;AACA,WAAW,EAGV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAKV;AACD;AACA;AACA,WAAW,EAOV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,0DAAY;AACnD,iCAAiC,0DAAY;AAC7C,2CAA2C,0DAAY;AACvD,yCAAyC,0DAAY;AACrD,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,6OAA6O,YAAY,sYAAsY,mBAAmB,qFAAqF,wFAAwF,sBAAsB,KAAK,sFAAsF,cAAc,qKAAqK,cAAc,wMAAwM,cAAc,6PAA6P,cAAc,6NAA6N,qBAAqB,KAAK,uDAAuD,2KAA2K,wCAAwC,+RAA+R,sBAAsB,qcAAqc,sBAAsB,qFAAqF,mBAAmB,wJAAwJ,mBAAmB,6OAA6O,8BAA8B,mhBAAmhB,8BAA8B,iGAAiG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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/action-button-table.model.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by romeo on 24/10/2021.\r\n */\r\nclass ActionButtonTable {\r\n    /**\r\n     * @param {?} key\r\n     * @param {?=} text\r\n     * @param {?=} icon\r\n     * @param {?=} tooltip\r\n     * @param {?=} html\r\n     */\r\n    constructor(key, text, icon, tooltip, html) {\r\n        this.key = key;\r\n        this.icon = icon || '';\r\n        this.text = text || '';\r\n        this.tooltip = tooltip || this.text;\r\n        this.html = html || '';\r\n        this.target = -1;\r\n        this.displayConditionFn = (/**\r\n         * @param {?} data\r\n         * @return {?}\r\n         */\r\n        data => true);\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    keyValue(value) {\r\n        this.key = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    iconValue(value) {\r\n        this.icon = value || '';\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    textValue(value) {\r\n        this.text = value || '';\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    tooltipValue(value) {\r\n        this.tooltip = value || '';\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    htmlValue(value) {\r\n        this.html = value || '';\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {?} condition\r\n     * @return {?}\r\n     */\r\n    displayCondition(condition) {\r\n        this.displayConditionFn = condition;\r\n        return this;\r\n    }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    ActionButtonTable.prototype.key;\r\n    /** @type {?} */\r\n    ActionButtonTable.prototype.icon;\r\n    /** @type {?} */\r\n    ActionButtonTable.prototype.text;\r\n    /** @type {?} */\r\n    ActionButtonTable.prototype.tooltip;\r\n    /** @type {?} */\r\n    ActionButtonTable.prototype.html;\r\n    /** @type {?} */\r\n    ActionButtonTable.prototype.targetData;\r\n    /** @type {?} */\r\n    ActionButtonTable.prototype.target;\r\n    /** @type {?} */\r\n    ActionButtonTable.prototype.displayConditionFn;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/column-table.model.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by romeo on 24/10/2021.\r\n */\r\nclass ColumnTable {\r\n    /**\r\n     * @param {?} title\r\n     * @param {?=} nameProperty\r\n     * @param {?=} display\r\n     * @param {?=} width\r\n     */\r\n    constructor(title, nameProperty, display, width) {\r\n        this.title = title;\r\n        this.nameProperty = nameProperty || title;\r\n        this.display = display == null ? true : display;\r\n        this.width = width || '';\r\n        this.customCellFn = (/**\r\n         * @param {?} data\r\n         * @param {?} cellData\r\n         * @return {?}\r\n         */\r\n        (data, cellData) => '');\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    titleValue(value) {\r\n        this.title = value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    namePropertyValue(value) {\r\n        this.nameProperty = value || this.title;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    displayValue(value) {\r\n        this.display = value == null ? true : value;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    widthValue(value) {\r\n        this.width = value || '';\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {?} cellDefinition\r\n     * @return {?}\r\n     */\r\n    customCell(cellDefinition) {\r\n        this.customCellFn = cellDefinition;\r\n        return this;\r\n    }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    ColumnTable.prototype.title;\r\n    /** @type {?} */\r\n    ColumnTable.prototype.nameProperty;\r\n    /** @type {?} */\r\n    ColumnTable.prototype.display;\r\n    /** @type {?} */\r\n    ColumnTable.prototype.width;\r\n    /** @type {?} */\r\n    ColumnTable.prototype.customCellFn;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/models/row-table.model.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Created by romeo on 24/10/2021.\r\n */\r\nclass RowTable {\r\n    /**\r\n     * @param {?} data\r\n     * @param {?=} nativeElement\r\n     */\r\n    constructor(data, nativeElement) {\r\n        this.data = data;\r\n        this.nativeElement = nativeElement;\r\n    }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    RowTable.prototype.data;\r\n    /** @type {?} */\r\n    RowTable.prototype.nativeElement;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-agile-table.service.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxAgileTableService {\r\n    /**\r\n     * @param {?} domSanitizer\r\n     */\r\n    constructor(domSanitizer) {\r\n        NgxAgileTableService.sanitizer = domSanitizer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    static getSanitizer() {\r\n        return NgxAgileTableService.sanitizer;\r\n    }\r\n}\r\nNgxAgileTableService.sanitizer = null;\r\nNgxAgileTableService.decorators = [\r\n    { type: Injectable }\r\n];\r\n/** @nocollapse */\r\nNgxAgileTableService.ctorParameters = () => [\r\n    { type: DomSanitizer }\r\n];\r\nif (false) {\r\n    /** @type {?} */\r\n    NgxAgileTableService.sanitizer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-agile-table.component.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass RowData {\r\n    /**\r\n     * @param {?} originalData\r\n     * @param {?} displayData\r\n     */\r\n    constructor(originalData, displayData) {\r\n        this.originalData = originalData;\r\n        this.displayData = displayData;\r\n    }\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    RowData.prototype.originalData;\r\n    /** @type {?} */\r\n    RowData.prototype.displayData;\r\n}\r\nclass Row {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Row.prototype.data;\r\n    /** @type {?} */\r\n    Row.prototype.actionButtons;\r\n    /** @type {?} */\r\n    Row.prototype.collapsedActionButtons;\r\n}\r\nclass NgxAgileTableComponent {\r\n    constructor() {\r\n        this.actionButtons = [];\r\n        this.collapseActionButton = new ActionButtonTable('collapse', '...');\r\n        this.columnSettings = [];\r\n        this.data = [];\r\n        this.emptyText = 'No content';\r\n        this.actionButtonTitle = '';\r\n        this.searchText = 'Search';\r\n        this.maxSizeText = 'Max size';\r\n        this.totalElementsText = 'Total Elements';\r\n        this.paginationPreviousText = '<<';\r\n        this.paginationNextText = '>>';\r\n        this.paginationPreviousIcon = '';\r\n        this.paginationNextIcon = '';\r\n        this.displayGlobalSearchInput = false;\r\n        this.colorVariationLineBreak = 2;\r\n        this.maxActionButtonPerRow = 3;\r\n        this.collapseActionButtonPosition = 'right';\r\n        this.height = '';\r\n        this.totalElements = 0;\r\n        this.totalPages = 0;\r\n        this.elementPerPageList = [];\r\n        this.enableColumnFiltering = true;\r\n        this.enableColumnSorting = true;\r\n        this.localPagination = false;\r\n        this.onClickActionButton = new EventEmitter();\r\n        this.onPageChanged = new EventEmitter();\r\n        this.onElementPerPageChanged = new EventEmitter();\r\n        this.onGlobalSearchRequest = new EventEmitter();\r\n        this.onRowDisplayed = new EventEmitter();\r\n        this.pageSelected = 1;\r\n        this.collapseActionButtonPositions = ['right', 'bottom'];\r\n        this.pagesRangeLimit = 5;\r\n        this.pageStart = 1;\r\n        this.globalSearchKeywords = '';\r\n        this.columnSearchKeyword = '';\r\n        this.columnSearchAttr = '';\r\n        this.columnSortDirectionAsc = false;\r\n        this.columnSortAttr = '';\r\n        this.rows = [];\r\n        this.rowsToDisplay = [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.data) { // Value passed is null\r\n            this.data = [];\r\n        }\r\n        if (this.totalElements === 0 && this.data.length !== 0) {\r\n            this.totalElements = this.data.length;\r\n        }\r\n        if (!this.elementPerPage) {\r\n            this.elementPerPage = this.data.length;\r\n        }\r\n        this.displayData();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    formatRows() {\r\n        /** @type {?} */\r\n        const rows = [];\r\n        /** @type {?} */\r\n        let row;\r\n        /** @type {?} */\r\n        let canDisplayButton;\r\n        for (const dt of this.data) {\r\n            row = new Row();\r\n            row.data = dt;\r\n            row.actionButtons = [];\r\n            row.collapsedActionButtons = [];\r\n            for (const actionButton of this.actionButtons) {\r\n                canDisplayButton = actionButton.displayConditionFn(this.data.find((/**\r\n                 * @param {?} d\r\n                 * @return {?}\r\n                 */\r\n                d => JSON.stringify(dt) === JSON.stringify(d))));\r\n                if (canDisplayButton) {\r\n                    if (row.actionButtons.length < this.maxActionButtonPerRow - 1) { // -1 for collapse button\r\n                        row.actionButtons.push(actionButton);\r\n                    }\r\n                    else {\r\n                        row.collapsedActionButtons.push(actionButton);\r\n                    }\r\n                }\r\n            }\r\n            rows.push(row);\r\n        }\r\n        this.rows = rows;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    ngOnChanges(changes) {\r\n        if (changes.data) {\r\n            this.data = changes.data.currentValue;\r\n        }\r\n        if (changes.actionButtons) {\r\n            this.actionButtons = changes.actionButtons.currentValue;\r\n        }\r\n        if (changes.collapseActionButton) {\r\n            this.collapseActionButton = changes.collapseActionButton.currentValue;\r\n        }\r\n        if (changes.collapseActionButtonPosition) {\r\n            this.collapseActionButtonPosition = changes.collapseActionButtonPosition.currentValue;\r\n        }\r\n        if (changes.maxActionButtonPerRow) {\r\n            this.maxActionButtonPerRow = changes.maxActionButtonPerRow.currentValue;\r\n        }\r\n        if (changes.totalElements) {\r\n            this.totalElements = changes.totalElements.currentValue;\r\n        }\r\n        if (changes.totalPages) {\r\n            this.totalPages = changes.totalPages.currentValue;\r\n        }\r\n        if (changes.elementPerPage) {\r\n            this.elementPerPage = changes.elementPerPage.currentValue;\r\n        }\r\n        if (changes.height) {\r\n            this.height = changes.height.currentValue;\r\n        }\r\n        if (changes.columnSettings) {\r\n            this.columnSettings = changes.columnSettings.currentValue;\r\n        }\r\n        if (changes.colorVariationLineBreak) {\r\n            this.colorVariationLineBreak = changes.colorVariationLineBreak.currentValue;\r\n        }\r\n        if (changes.displayGlobalSearchInput) {\r\n            this.displayGlobalSearchInput = changes.displayGlobalSearchInput.currentValue;\r\n        }\r\n        if (changes.elementPerPageList) {\r\n            this.elementPerPageList = changes.elementPerPageList.currentValue;\r\n        }\r\n        if (changes.localPagination) {\r\n            this.localPagination = changes.localPagination.currentValue;\r\n        }\r\n        if (changes.enableColumnFiltering) {\r\n            this.enableColumnFiltering = changes.enableColumnFiltering.currentValue;\r\n        }\r\n        if (changes.enableColumnSorting) {\r\n            this.enableColumnSorting = changes.enableColumnSorting.currentValue;\r\n        }\r\n        if (changes.emptyText) {\r\n            this.emptyText = changes.emptyText.currentValue;\r\n        }\r\n        if (changes.maxSizeText) {\r\n            this.maxSizeText = changes.maxSizeText.currentValue;\r\n        }\r\n        if (changes.totalElementsText) {\r\n            this.totalElementsText = changes.totalElementsText.currentValue;\r\n        }\r\n        if (this.elementPerPageList) {\r\n            if (this.elementPerPageList.length === 0) {\r\n                this.elementPerPageList = [this.elementPerPage, 20, 50, 100, 200];\r\n            }\r\n            if (this.elementPerPageList.indexOf(this.elementPerPage) === -1) {\r\n                this.elementPerPageList.push(this.elementPerPage);\r\n            }\r\n            this.elementPerPageList.sort((/**\r\n             * @param {?} a\r\n             * @param {?} b\r\n             * @return {?}\r\n             */\r\n            (a, b) => a < b ? -1 : 1));\r\n        }\r\n        this.displayData();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    displayData() {\r\n        this.formatRows();\r\n        if (this.localPagination) {\r\n            this.totalPageCalculation();\r\n            this.rowsToDisplay = this.segmentation(1);\r\n        }\r\n        else {\r\n            this.rowsToDisplay = [].concat(this.rows);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    totalPageCalculation(data) {\r\n        data = data ? data : this.rows;\r\n        if (data) {\r\n            this.totalPages = data.length / this.elementPerPage;\r\n            if ((data.length % this.elementPerPage) !== 0 || this.totalPages === 0) {\r\n                this.totalPages++;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    resetTotalPages(data) {\r\n        this.pageSelected = 1;\r\n        this.pageStart = 1;\r\n        if (this.localPagination) {\r\n            this.totalPageCalculation(data);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} page\r\n     * @param {?=} data\r\n     * @return {?}\r\n     */\r\n    segmentation(page, data) {\r\n        data = data ? data : this.rows;\r\n        if (data) {\r\n            if (page === 1) {\r\n                return data.slice(0, this.elementPerPage);\r\n            }\r\n            else if (data.length >= this.elementPerPage * page) {\r\n                return data.slice((page - 1) * this.elementPerPage, page * this.elementPerPage);\r\n            }\r\n            else {\r\n                return data.slice((page - 1) * this.elementPerPage, this.rows.length);\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    pages() {\r\n        /** @type {?} */\r\n        const result = [];\r\n        /** @type {?} */\r\n        const presumePageEnd = this.pageStart + this.pagesRangeLimit;\r\n        /** @type {?} */\r\n        const limit = presumePageEnd <= this.totalPages ? presumePageEnd - 1 : this.totalPages;\r\n        for (let i = this.pageStart; i <= limit; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * @param {?} button\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    onActionButtonClicked(button, index) {\r\n        if (!this.collapseActionButton || this.collapseActionButton.key !== button.key) {\r\n            button.targetData = this.rowsToDisplay[index].data;\r\n            button.target = this.rows.findIndex((/**\r\n             * @param {?} r\r\n             * @return {?}\r\n             */\r\n            r => JSON.stringify(button.targetData) === JSON.stringify(r.data)));\r\n            this.onClickActionButton.emit(button);\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    globalSearchRequest() {\r\n        this.onGlobalSearchRequest.emit(this.globalSearchKeywords);\r\n    }\r\n    /**\r\n     * @param {?} page\r\n     * @return {?}\r\n     */\r\n    onPageChange(page) {\r\n        if (this.localPagination) {\r\n            if (this.columnSearchKeyword && this.columnSearchKeyword !== '') {\r\n                this.filterTable(this.columnSearchAttr, this.columnSearchKeyword, page);\r\n            }\r\n            else if (this.columnSortAttr && this.columnSortAttr !== '') {\r\n                this.sortDataDisplay(this.columnSortAttr, this.columnSortDirectionAsc, page);\r\n            }\r\n            else {\r\n                this.rowsToDisplay = this.segmentation(page);\r\n            }\r\n        }\r\n        else {\r\n            this.onPageChanged.emit(page);\r\n        }\r\n        this.pageSelected = page;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    onElementPerPageChange() {\r\n        if (this.localPagination) {\r\n            if (this.columnSearchKeyword && this.columnSearchKeyword !== '') {\r\n                this.filterTable(this.columnSearchAttr, this.columnSearchKeyword, 1);\r\n            }\r\n            else if (this.columnSortAttr && this.columnSortAttr !== '') {\r\n                this.sortDataDisplay(this.columnSortAttr, this.columnSortDirectionAsc, 1);\r\n            }\r\n            else {\r\n                this.resetTotalPages();\r\n                this.rowsToDisplay = this.segmentation(1);\r\n            }\r\n        }\r\n        else {\r\n            this.onElementPerPageChanged.emit(this.elementPerPage);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} attr\r\n     * @param {?} keyword\r\n     * @param {?=} page\r\n     * @return {?}\r\n     */\r\n    filterTable(attr, keyword, page) {\r\n        /** @type {?} */\r\n        let searchResults;\r\n        if (keyword && keyword !== '') {\r\n            searchResults = this.rows.filter((/**\r\n             * @param {?} r\r\n             * @return {?}\r\n             */\r\n            r => (this.columnValue(r.data, attr, false) + '').toLowerCase().includes(keyword.toLowerCase())));\r\n        }\r\n        else {\r\n            searchResults = this.rows;\r\n        }\r\n        this.rowsToDisplay = this.segmentation(page ? page : 1, searchResults);\r\n        this.resetTotalPages(searchResults);\r\n        this.columnSearchKeyword = keyword;\r\n        this.columnSearchAttr = attr;\r\n    }\r\n    /**\r\n     * @param {?} attr\r\n     * @param {?} ascFiltering\r\n     * @param {?=} page\r\n     * @return {?}\r\n     */\r\n    sortDataDisplay(attr, ascFiltering, page) {\r\n        /** @type {?} */\r\n        let searchResults;\r\n        if (ascFiltering) {\r\n            searchResults = this.rows.sort((/**\r\n             * @param {?} a\r\n             * @param {?} b\r\n             * @return {?}\r\n             */\r\n            (a, b) => {\r\n                /** @type {?} */\r\n                let value = this.columnValue(a.data, attr, false);\r\n                /** @type {?} */\r\n                let value2 = this.columnValue(b.data, attr, false);\r\n                value = parseFloat(value) ? parseFloat(value) : value;\r\n                value2 = parseFloat(value2) ? parseFloat(value2) : value2;\r\n                if (value < value2) {\r\n                    return 1;\r\n                }\r\n                if ((value > value2)) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }));\r\n        }\r\n        else {\r\n            searchResults = this.rows.sort((/**\r\n             * @param {?} a\r\n             * @param {?} b\r\n             * @return {?}\r\n             */\r\n            (a, b) => {\r\n                /** @type {?} */\r\n                let value = this.columnValue(a.data, attr, false);\r\n                /** @type {?} */\r\n                let value2 = this.columnValue(b.data, attr, false);\r\n                value = parseFloat(value) ? parseFloat(value) : value;\r\n                value2 = parseFloat(value2) ? parseFloat(value2) : value2;\r\n                if (value > value2) {\r\n                    return 1;\r\n                }\r\n                if ((value < value2)) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }));\r\n        }\r\n        this.rowsToDisplay = this.segmentation(page ? page : 1, searchResults);\r\n        this.resetTotalPages(searchResults);\r\n        this.columnSortDirectionAsc = ascFiltering;\r\n        this.columnSortAttr = attr;\r\n    }\r\n    /**\r\n     * @param {?} attr\r\n     * @param {?} sortColumnDirection\r\n     * @return {?}\r\n     */\r\n    sortByColumn(attr, sortColumnDirection) {\r\n        this.sortDataDisplay(attr, sortColumnDirection.checked);\r\n        sortColumnDirection.checked = !sortColumnDirection.checked;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    nextPages() {\r\n        if (this.pageStart + this.pagesRangeLimit - 1 < this.totalPages) {\r\n            this.pageStart += this.pagesRangeLimit;\r\n        }\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    previousPages() {\r\n        if (this.pageStart > this.pagesRangeLimit) {\r\n            this.pageStart -= this.pagesRangeLimit;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} data\r\n     * @param {?} columnProperty\r\n     * @return {?}\r\n     */\r\n    tableDataTitleAttribute(data, columnProperty) {\r\n        /** @type {?} */\r\n        const value = '' + this.columnValue(data, columnProperty, false);\r\n        if (value.includes('<') && value.includes('>')) {\r\n            return '';\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} data\r\n     * @param {?} columnProperty\r\n     * @param {?=} sanitize\r\n     * @return {?}\r\n     */\r\n    columnValue(data, columnProperty, sanitize) {\r\n        /** @type {?} */\r\n        let value;\r\n        if (columnProperty.includes('.')) {\r\n            /** @type {?} */\r\n            let desiredValue = JSON.parse(JSON.stringify(data));\r\n            columnProperty.split('.').forEach((/**\r\n             * @param {?} element\r\n             * @return {?}\r\n             */\r\n            (element) => {\r\n                if (element.includes('[') && element.includes(']')) {\r\n                    /** @type {?} */\r\n                    const openHookIndex = element.indexOf('[');\r\n                    /** @type {?} */\r\n                    const closeHookIndex = element.indexOf(']');\r\n                    desiredValue = desiredValue[element.substring(0, openHookIndex)][parseInt(element.substring(openHookIndex + 1, closeHookIndex), 10)];\r\n                }\r\n                else if (desiredValue) {\r\n                    desiredValue = desiredValue[element];\r\n                }\r\n            }));\r\n            value = desiredValue;\r\n        }\r\n        else {\r\n            value = data[columnProperty];\r\n        }\r\n        if (sanitize !== false) {\r\n            return this.sanitize(value);\r\n        }\r\n        else {\r\n            return (value !== null && value !== undefined) ? value : '';\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} data\r\n     * @param {?} columnTable\r\n     * @return {?}\r\n     */\r\n    columnDisplayValue(data, columnTable) {\r\n        /** @type {?} */\r\n        const originalValue = this.columnValue(data, columnTable.nameProperty, false);\r\n        /** @type {?} */\r\n        const displayValue = columnTable.customCellFn(originalValue, data);\r\n        if (displayValue.length !== 0) { // If not default value : Default value returned by customCellFn() is empty string\r\n            return this.sanitize(displayValue);\r\n        }\r\n        else {\r\n            return originalValue;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    sanitize(value) {\r\n        return value ? NgxAgileTableService.getSanitizer().bypassSecurityTrustHtml(value) : '<span></span>';\r\n    }\r\n    /**\r\n     * @param {?} button\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    displayButton(button, index) {\r\n        return button.displayConditionFn(this.rows.find((/**\r\n         * @param {?} d\r\n         * @return {?}\r\n         */\r\n        d => JSON.stringify(this.rowsToDisplay[index].data) === JSON.stringify(d.data))));\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getCollapsePosition() {\r\n        if (this.collapseActionButtonPositions.indexOf(this.collapseActionButtonPosition) !== -1) {\r\n            return 'collapse-' + this.collapseActionButtonPosition;\r\n        }\r\n        else {\r\n            return 'collapse-' + this.collapseActionButtonPositions[0];\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    getActionButtonToDisplay(data) {\r\n        return this.rows.find((/**\r\n         * @param {?} row\r\n         * @return {?}\r\n         */\r\n        row => row.data === data)).actionButtons;\r\n    }\r\n    /**\r\n     * @param {?} data\r\n     * @return {?}\r\n     */\r\n    getActionButtonToCollapse(data) {\r\n        return this.rows.find((/**\r\n         * @param {?} row\r\n         * @return {?}\r\n         */\r\n        row => row.data === data)).collapsedActionButtons;\r\n    }\r\n    /**\r\n     * @param {?} data\r\n     * @param {?} nativeElement\r\n     * @return {?}\r\n     */\r\n    rowDisplayed(data, nativeElement) {\r\n        this.onRowDisplayed.emit(new RowTable(data, nativeElement));\r\n        return '';\r\n    }\r\n}\r\nNgxAgileTableComponent.decorators = [\r\n    { type: Component, args: [{\r\n                selector: 'ngx-table',\r\n                template: \"<div class=\\\"ngx-table\\\">\\r\\n  <div class=\\\"flex-end mt-3 mb-2\\\">\\r\\n    <input *ngIf=\\\"displayGlobalSearchInput\\\" id=\\\"search\\\" type=\\\"text\\\"\\r\\n           [(ngModel)]=\\\"globalSearchKeywords\\\" placeholder=\\\"{{searchText}}\\\"\\r\\n           (keyup.enter)=\\\"globalSearchRequest()\\\">\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <div>\\r\\n      <div [ngClass]=\\\"actionButtons && actionButtons.length != 0 ? 'responsive' : ''\\\">\\r\\n\\r\\n        <table class=\\\"table-border table-hover\\\" *ngIf=\\\"columnSettings\\\">\\r\\n\\r\\n          <thead>\\r\\n\\r\\n          <th *ngIf=\\\"actionButtons && actionButtons.length != 0\\\">\\r\\n            {{actionButtonTitle}}\\r\\n          </th>\\r\\n          <ng-container *ngFor=\\\"let column of columnSettings; let i=index\\\">\\r\\n            <th *ngIf=\\\"column.display\\\" [ngStyle]=\\\"column.width ? {'width': column.width} : {}\\\">\\r\\n              <div class=\\\"w-100 text-center\\\"\\r\\n                   title=\\\"{{column.title}}\\\">\\r\\n                <input class=\\\"column-direction\\\" #sortColumnDirection type=\\\"checkbox\\\" hidden/>\\r\\n                <strong *ngIf=\\\"!enableColumnSorting\\\">{{column.title}}</strong>\\r\\n                <strong *ngIf=\\\"enableColumnSorting\\\" class=\\\"sort\\\"\\r\\n                        (click)=\\\"sortByColumn(column.nameProperty, sortColumnDirection)\\\">\\r\\n                  {{column.title}}\\r\\n                </strong>\\r\\n              </div>\\r\\n              <input *ngIf=\\\"enableColumnFiltering\\\" class=\\\"column-key-search\\\" #filterKeyword class=\\\"table-input\\\"\\r\\n                     type=\\\"text\\\"\\r\\n                     placeholder=\\\"{{column.title}}\\\"\\r\\n                     (keyup)=\\\"filterTable(column.nameProperty, filterKeyword.value)\\\"/>\\r\\n            </th>\\r\\n          </ng-container>\\r\\n          </thead>\\r\\n          <tbody [ngStyle]=\\\"height.length != 0 ? {'max-height': height} : {}\\\">\\r\\n          <tr *ngFor=\\\"let row of rowsToDisplay; let i=index\\\"\\r\\n              [ngClass]=\\\"colorVariationLineBreak !== 0 && (i + 1) % colorVariationLineBreak == 0 ? 'table-mark' : ''\\\" #nativeElement>\\r\\n            {{ rowDisplayed(row.data, nativeElement)}}\\r\\n\\r\\n            <td *ngIf=\\\"actionButtons && actionButtons.length != 0\\\">\\r\\n              <div class=\\\"flex-center\\\">\\r\\n                <ng-container *ngFor=\\\"let actionButton of row.actionButtons\\\">\\r\\n                  <div class=\\\"action-button action-button-margin\\\" title=\\\"{{actionButton.tooltip}}\\\"\\r\\n                       (click)=\\\"onActionButtonClicked(actionButton, i)\\\">\\r\\n                    <div *ngIf=\\\"actionButton.html.length != 0\\\" [innerHtml]=\\\"sanitize(actionButton.html)\\\"></div>\\r\\n\\r\\n                    <ng-container *ngIf=\\\"actionButton.html.length == 0 && actionButton.icon.length != 0\\\">\\r\\n                      <img *ngIf=\\\"actionButton.icon.includes('/')\\\" [src]=\\\"actionButton.icon\\\"\\r\\n                           alt=\\\"{{actionButton.tooltip}}\\\">\\r\\n                      <i *ngIf=\\\"!actionButton.icon.includes('/')\\\" class=\\\"{{actionButton.icon}}\\\"></i>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <a *ngIf=\\\"actionButton.html.length == 0 && actionButton.icon.length == 0\\\">{{actionButton.text}}</a>\\r\\n\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n                <ng-container *ngIf=\\\"row.collapsedActionButtons.length !== 0\\\">\\r\\n                  <div class=\\\"action-button action-button-margin\\\" title=\\\"{{collapseActionButton.tooltip}}\\\">\\r\\n                    <ul class=\\\"collapse-action-button\\\">\\r\\n                      <li>\\r\\n                        <div *ngIf=\\\"collapseActionButton.html.length != 0\\\" [innerHtml]=\\\"sanitize(collapseActionButton.html)\\\"></div>\\r\\n\\r\\n                        <ng-container *ngIf=\\\"collapseActionButton.html.length == 0 && collapseActionButton.icon.length != 0\\\">\\r\\n                          <img *ngIf=\\\"collapseActionButton.icon.includes('/')\\\" [src]=\\\"collapseActionButton.icon\\\"\\r\\n                               alt=\\\"{{collapseActionButton.tooltip}}\\\">\\r\\n                          <i *ngIf=\\\"!collapseActionButton.icon.includes('/')\\\" class=\\\"{{collapseActionButton.icon}}\\\"></i>\\r\\n                        </ng-container>\\r\\n\\r\\n                        <a *ngIf=\\\"collapseActionButton.html.length == 0 && collapseActionButton.icon.length == 0\\\">\\r\\n                          {{collapseActionButton.text}}\\r\\n                        </a>\\r\\n                        <ul class=\\\"collapse-container {{ getCollapsePosition() }}\\\">\\r\\n                          <li *ngFor=\\\"let collapsedButton of row.collapsedActionButtons\\\">\\r\\n                            <div class=\\\"collapse-button\\\" title=\\\"{{collapsedButton.tooltip}}\\\"\\r\\n                                 (click)=\\\"onActionButtonClicked(collapsedButton, i)\\\">\\r\\n                              <div *ngIf=\\\"collapsedButton.html.length != 0\\\" [innerHtml]=\\\"sanitize(collapsedButton.html)\\\"></div>\\r\\n\\r\\n                              <ng-container *ngIf=\\\"collapsedButton.html.length == 0 && collapsedButton.icon.length != 0\\\">\\r\\n                                <img *ngIf=\\\"collapsedButton.icon.includes('/')\\\" [src]=\\\"collapsedButton.icon\\\"\\r\\n                                     alt=\\\"{{collapsedButton.tooltip}}\\\">\\r\\n                                <i *ngIf=\\\"!collapsedButton.icon.includes('/')\\\" class=\\\"{{collapsedButton.icon}}\\\"></i>\\r\\n                              </ng-container>\\r\\n\\r\\n                              <a *ngIf=\\\"collapsedButton.html.length == 0 && collapsedButton.icon.length == 0\\\">{{collapsedButton.text}}</a>\\r\\n\\r\\n                            </div>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </li>\\r\\n                    </ul>\\r\\n                  </div>\\r\\n                </ng-container>\\r\\n              </div>\\r\\n            </td>\\r\\n\\r\\n            <ng-container *ngFor=\\\"let column of columnSettings; let i=index\\\">\\r\\n              <td *ngIf=\\\"column.display\\\"\\r\\n                  title=\\\"{{tableDataTitleAttribute(row.data,column.nameProperty)}}\\\">\\r\\n                <div [innerHtml]=\\\"columnDisplayValue(row.data,column)\\\"></div>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n          </tr>\\r\\n          <tr *ngIf=\\\"rowsToDisplay.length === 0\\\" class=\\\"table-no-content\\\">\\r\\n            <td [attr.colspan]=\\\"actionButtons && actionButtons.length != 0 ? columnSettings.length + 1 : columnSettings.length\\\">\\r\\n              {{emptyText}}\\r\\n            </td>\\r\\n          </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"table-footer\\\">\\r\\n      <div class=\\\"flex-between m-3\\\"\\r\\n           *ngIf=\\\"totalPages && totalElements && totalElements !== elementPerPage\\\">\\r\\n        <div *ngIf=\\\"totalElementsText.length !== 0\\\">\\r\\n          {{totalElementsText}}: {{rowsToDisplay.length !== 0 ? (rowsToDisplay.length + '/' + totalElements) : 0}}\\r\\n        </div>\\r\\n        <div class=\\\"flex mt-2 mb-2\\\">\\r\\n          <div class=\\\"mr-1 size\\\" *ngIf=\\\"maxSizeText.length !== 0\\\">{{maxSizeText}}:</div>\\r\\n          <select [(ngModel)]=\\\"elementPerPage\\\" (change)=\\\"onElementPerPageChange()\\\">\\r\\n            <option *ngFor=\\\"let element of elementPerPageList\\\">{{element}}</option>\\r\\n          </select>\\r\\n          <nav>\\r\\n            <ul class=\\\"table-pagination justify-content-center\\\">\\r\\n              <li class=\\\"table-page-item\\\" [ngClass]=\\\"pageStart <= pagesRangeLimit ? 'disabled' : ''\\\">\\r\\n                <a class=\\\"table-page-link\\\" (click)=\\\"previousPages()\\\">\\r\\n                  <ng-container *ngIf=\\\"paginationPreviousIcon.length !== 0\\\">\\r\\n                    <img *ngIf=\\\"paginationPreviousIcon.includes('/')\\\" [src]=\\\"paginationPreviousIcon\\\">\\r\\n                    <i *ngIf=\\\"!paginationPreviousIcon.includes('/')\\\" class=\\\"{{paginationPreviousIcon}}\\\"></i>\\r\\n                  </ng-container>\\r\\n                  <ng-container *ngIf=\\\"paginationPreviousIcon.length === 0\\\">\\r\\n                    {{paginationPreviousText}}\\r\\n                  </ng-container>\\r\\n                </a>\\r\\n              </li>\\r\\n              <li class=\\\"table-page-item\\\" *ngFor=\\\"let page of pages()\\\"\\r\\n                  [ngClass]=\\\"page == pageSelected ? 'active' : ''\\\">\\r\\n                <a class=\\\"table-page-link\\\" (click)=\\\"onPageChange(page)\\\">{{page}}</a>\\r\\n              </li>\\r\\n              <li class=\\\"table-page-item\\\" [ngClass]=\\\"pageStart + pagesRangeLimit - 1 >= totalPages ? 'disabled' : ''\\\">\\r\\n                <a class=\\\"table-page-link\\\" (click)=\\\"nextPages()\\\">\\r\\n                  <ng-container *ngIf=\\\"paginationNextIcon.length !== 0\\\">\\r\\n                    <img *ngIf=\\\"paginationNextIcon.includes('/')\\\" [src]=\\\"paginationNextIcon\\\">\\r\\n                    <i *ngIf=\\\"!paginationNextIcon.includes('/')\\\" class=\\\"{{paginationNextIcon}}\\\"></i>\\r\\n                  </ng-container>\\r\\n                  <ng-container *ngIf=\\\"paginationNextIcon.length === 0\\\">\\r\\n                    {{paginationNextText}}\\r\\n                  </ng-container>\\r\\n                </a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div style=\\\"margin: 0; opacity: 0;height: 0;width: 0;\\\">Built with love by Klaus Laghom and Romeo Njinang</div>\\r\\n</div>\\r\\n\",\r\n                styles: [\".ngx-table .flex,.ngx-table .flex-between,.ngx-table .flex-center,.ngx-table .flex-end{display:flex}.ngx-table .flex-between{justify-content:space-between}.ngx-table .flex-end{justify-content:flex-end}.ngx-table .flex-center{justify-content:center}.ngx-table .table-hover tbody tr:hover{background-color:#faf5ff}.ngx-table .table-input{width:95%;line-height:normal;padding:0 0 0 2px;font-weight:400;height:30px;margin-top:4px}.ngx-table .table-mark{background-color:#faf5ff}.ngx-table .table-border td,.ngx-table .table-border th{border:1px solid #dee2e6}.ngx-table .responsive{display:block;width:100%;overflow-x:auto}.ngx-table a{color:#1e6bb8;text-decoration:none}.ngx-table a:hover{text-decoration:underline;cursor:pointer}.ngx-table .action-button-margin{margin:0 .25rem}.ngx-table .action-button a:hover,.ngx-table .action-button i:hover,.ngx-table .action-button img:hover{opacity:.7;cursor:pointer}.ngx-table .action-button i{font-size:19px;padding:5px;color:#002e68}.ngx-table .action-button img{width:20px;height:20px;border-radius:30px;padding:6px}.ngx-table .collapse-action-button,.ngx-table .collapse-container{list-style-type:none;padding:0;margin:0}.ngx-table .collapse-action-button li .collapse-button:hover{background-color:#faf5ff}.ngx-table .collapse-action-button li .collapse-button{padding:.25rem 1rem;display:block}.ngx-table .collapse-action-button .collapse-container{display:none}.ngx-table .collapse-container{position:absolute;background-color:#fff;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.ngx-table .collapse-action-button li:hover .collapse-right{display:flex!important}.ngx-table .collapse-action-button li:hover .collapse-bottom{display:block!important}.ngx-table .collapse-right{max-width:20rem;overflow-x:auto;margin-top:-1.3rem}.ngx-table .collapse-bottom{max-height:20rem;overflow-y:auto;margin-top:-1.3rem}.ngx-table .p-1{padding:.25rem!important}.ngx-table .p-2{padding:.5rem!important}.ngx-table .p-3{padding:1rem!important}.ngx-table .m-1{margin:.25rem!important}.ngx-table .m-2{margin:.5rem!important}.ngx-table .m-3{margin:1rem!important}.ngx-table .mb-2{margin-bottom:.5rem!important}.ngx-table .mt-2{margin-right:.5rem!important}.ngx-table .mr-2{margin-top:.5rem!important}.ngx-table .ml-3{margin-left:1rem!important}.ngx-table .mr-1{margin-right:.25rem!important}.ngx-table .sort{cursor:pointer}.ngx-table .sort:hover{text-decoration:underline;opacity:.8}#search{max-width:50%}table thead th{position:-webkit-sticky;position:sticky;top:0;z-index:2;vertical-align:bottom;border:1px solid #dee2e6;border-bottom:2px solid #dee2e6;font-size:.875em;font-weight:700;background-color:#dee2e6;padding:.5em 1em;color:#000}table td{max-width:250px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding:.5em 1em}table tr{color:#2d2d2d;font-weight:700}table{background-color:#fff;margin-bottom:0;border-collapse:collapse;width:100%}table thead tr{color:#2d2d2d;background-color:#dee0e4;font-weight:700}table td,table th{vertical-align:top;border-top:1px solid #dee2e6}td{font-weight:400;font-size:14px}.table-pagination{display:flex;padding-left:0;list-style:none;border-radius:.25rem;margin:0}.table-page-link{position:relative;display:block;padding:.25rem .5rem;margin-left:-1px;line-height:1.25;background-color:#fff;border:1px solid #dee2e6}.table-page-item .table-page-link{cursor:pointer}.table-page-item.active .table-page-link{background-color:#dee2e6;border-color:#dee2e6}.table-pagination .disabled{opacity:.5;cursor:auto}.size{min-width:100px;text-align:end;margin-top:6px}.table-footer select{margin:0 .5rem 0 .25rem}@media (max-width:500px){.size{text-align:start}.table-footer .flex,.table-footer .flex-between{display:block!important}.table-footer nav{overflow:auto}.table-footer select{margin-bottom:1rem;margin-top:1rem}}\"]\r\n            }] }\r\n];\r\n/** @nocollapse */\r\nNgxAgileTableComponent.ctorParameters = () => [];\r\nNgxAgileTableComponent.propDecorators = {\r\n    actionButtons: [{ type: Input }],\r\n    collapseActionButton: [{ type: Input }],\r\n    columnSettings: [{ type: Input }],\r\n    data: [{ type: Input }],\r\n    emptyText: [{ type: Input }],\r\n    actionButtonTitle: [{ type: Input }],\r\n    searchText: [{ type: Input }],\r\n    maxSizeText: [{ type: Input }],\r\n    totalElementsText: [{ type: Input }],\r\n    paginationPreviousText: [{ type: Input }],\r\n    paginationNextText: [{ type: Input }],\r\n    paginationPreviousIcon: [{ type: Input }],\r\n    paginationNextIcon: [{ type: Input }],\r\n    displayGlobalSearchInput: [{ type: Input }],\r\n    colorVariationLineBreak: [{ type: Input }],\r\n    maxActionButtonPerRow: [{ type: Input }],\r\n    collapseActionButtonPosition: [{ type: Input }],\r\n    height: [{ type: Input }],\r\n    totalElements: [{ type: Input }],\r\n    totalPages: [{ type: Input }],\r\n    elementPerPage: [{ type: Input }],\r\n    elementPerPageList: [{ type: Input }],\r\n    enableColumnFiltering: [{ type: Input }],\r\n    enableColumnSorting: [{ type: Input }],\r\n    localPagination: [{ type: Input }],\r\n    onClickActionButton: [{ type: Output }],\r\n    onPageChanged: [{ type: Output }],\r\n    onElementPerPageChanged: [{ type: Output }],\r\n    onGlobalSearchRequest: [{ type: Output }],\r\n    onRowDisplayed: [{ type: Output }]\r\n};\r\nif (false) {\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.actionButtons;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.collapseActionButton;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.columnSettings;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.data;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.emptyText;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.actionButtonTitle;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.searchText;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.maxSizeText;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.totalElementsText;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.paginationPreviousText;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.paginationNextText;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.paginationPreviousIcon;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.paginationNextIcon;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.displayGlobalSearchInput;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.colorVariationLineBreak;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.maxActionButtonPerRow;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.collapseActionButtonPosition;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.height;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.totalElements;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.totalPages;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.elementPerPage;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.elementPerPageList;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.enableColumnFiltering;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.enableColumnSorting;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.localPagination;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.onClickActionButton;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.onPageChanged;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.onElementPerPageChanged;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.onGlobalSearchRequest;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.onRowDisplayed;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.pageSelected;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.collapseActionButtonPositions;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.pagesRangeLimit;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.pageStart;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.globalSearchKeywords;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.columnSearchKeyword;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.columnSearchAttr;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.columnSortDirectionAsc;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.columnSortAttr;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.rows;\r\n    /** @type {?} */\r\n    NgxAgileTableComponent.prototype.rowsToDisplay;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/ngx-agile-table.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgxAgileTableModule {\r\n    /**\r\n     * @param {?} ngxAgileTableService\r\n     */\r\n    constructor(ngxAgileTableService) {\r\n        this.ngxAgileTableService = ngxAgileTableService;\r\n    }\r\n}\r\nNgxAgileTableModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [\r\n                    NgxAgileTableComponent\r\n                ],\r\n                imports: [\r\n                    FormsModule,\r\n                    CommonModule\r\n                ],\r\n                exports: [\r\n                    NgxAgileTableComponent\r\n                ],\r\n                providers: [\r\n                    NgxAgileTableService\r\n                ]\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nNgxAgileTableModule.ctorParameters = () => [\r\n    { type: NgxAgileTableService }\r\n];\r\nif (false) {\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgxAgileTableModule.prototype.ngxAgileTableService;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: public-api.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: ngx-agile-table.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { ActionButtonTable, ColumnTable, NgxAgileTableComponent, NgxAgileTableModule, RowTable, NgxAgileTableService as ɵa };\n//# sourceMappingURL=ngx-agile-table.js.map\n","export default \"<h1>\\n  Basic usage\\n</h1>\\n\\n<p>List of students</p>\\n\\n<ngx-table\\n  [columnSettings]=\\\"customerColumns\\\"\\n  [data]=\\\"customers\\\"\\n>\\n\\n</ngx-table>\\n\\n<h1>\\n  Fully CSS customization\\n</h1>\\n\\n<p>List of students customized</p>\\n\\n<div class=\\\"customization\\\">\\n  <ngx-table\\n    [columnSettings]=\\\"customerColumns\\\"\\n    [data]=\\\"customers\\\"\\n  >\\n\\n  </ngx-table>\\n</div>\\n\\n\\n<h1>\\n  Fully Configurable Inputs\\n</h1>\\n\\n<table>\\n  <tbody>\\n  <tr>\\n    <td>Column filtering</td>\\n    <td>\\n      <label class=\\\"switch\\\">\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"enableColumnFiltering\\\">\\n        <span class=\\\"slider round\\\"></span>\\n      </label>\\n    </td>\\n    <td>Column sorting</td>\\n    <td>\\n      <label class=\\\"switch\\\">\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"enableColumnSorting\\\">\\n        <span class=\\\"slider round\\\"></span>\\n      </label>\\n    </td>\\n  </tr>\\n  <tr>\\n    <td>Local pagination</td>\\n    <td>\\n      <label class=\\\"switch\\\">\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"localPagination\\\">\\n        <span class=\\\"slider round\\\"></span>\\n      </label>\\n    </td>\\n    <td>Element per page : </td>\\n    <td>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"elementPerPage\\\" [disabled]=\\\"!localPagination\\\">\\n    </td>\\n  </tr>\\n  <tr>\\n    <td>Max number action button by row : </td>\\n    <td>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"maxActionButtonPerRow\\\">\\n    </td>\\n    <td>Position collapsed action button</td>\\n    <td>\\n        <select [(ngModel)]=\\\"collapseButtonPosition\\\">\\n          <option value=\\\"default\\\">Default</option>\\n          <option value=\\\"bottom\\\">Bottom</option>\\n          <option value=\\\"right\\\">Right</option>\\n        </select>\\n    </td>\\n  </tr>\\n  <tr>\\n    <td>Dangerous transaction (red row) with amount between : </td>\\n    <td>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"dangerousAmountMin\\\" (keyup.enter)=\\\"transactions = [].concat(transactions)\\\">\\n    </td>\\n    <td>\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"dangerousAmountMax\\\" (keyup.enter)=\\\"transactions = [].concat(transactions)\\\">\\n    </td>\\n    <td>(Press \\\"Enter\\\" to view changes)</td>\\n  </tr>\\n\\n  </tbody>\\n</table>\\n\\n<p>List of transactions</p>\\n<ngx-table\\n  [actionButtons]=\\\"actionButtons\\\"\\n  [collapseActionButtonPosition]=\\\"collapseButtonPosition\\\"\\n  [maxActionButtonPerRow]=\\\"maxActionButtonPerRow\\\"\\n  [columnSettings]=\\\"transactionColumns\\\"\\n  [data]=\\\"transactions\\\"\\n  [enableColumnSorting]=\\\"enableColumnSorting\\\"\\n  [enableColumnFiltering]=\\\"enableColumnFiltering\\\"\\n  [localPagination]=\\\"localPagination\\\"\\n  [elementPerPage]=\\\"elementPerPage\\\"\\n  [elementPerPageList]=\\\"elementPerPageList\\\"\\n  (onClickActionButton)=\\\"onActionButtonClicked($event)\\\"\\n  (onRowDisplayed)=\\\"onRowDisplayed($event)\\\"\\n>\\n\\n</ngx-table>\\n<!--<router-outlet></router-outlet>-->\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \"/* The switch - the box around the slider */\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 50px;\\n  height: 24px;\\n}\\n/* Hide default HTML checkbox */\\n.switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0;\\n}\\n/* The slider */\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  transition: 0.4s;\\n}\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 16px;\\n  width: 16px;\\n  left: 4px;\\n  bottom: 4px;\\n  background-color: white;\\n  transition: 0.4s;\\n}\\ninput:checked + .slider {\\n  background-color: #2196F3;\\n}\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3;\\n}\\ninput:checked + .slider:before {\\n  transform: translateX(26px);\\n}\\n/* Rounded sliders */\\n.slider.round {\\n  border-radius: 34px;\\n}\\n.slider.round:before {\\n  border-radius: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcHAvRDpcXFByb2pldHNcXFRlc3RcXG5neC1hZ2lsZS10YWJsZS12OFxccHJvamVjdHNcXG5neC1hZ2lsZS10YWJsZS8uLlxcLi5cXHNyY1xcYXBwXFxhcHAuY29tcG9uZW50LnNjc3MiLCIuLi8uLi9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQywyQ0FBQTtBQUNEO0VBQ0Usa0JBQUE7RUFDQSxxQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0FDQ0Y7QURFQSwrQkFBQTtBQUNBO0VBQ0UsVUFBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FDQ0Y7QURFQSxlQUFBO0FBQ0E7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0VBQ0Esc0JBQUE7RUFFQSxnQkFBQTtBQ0NGO0FERUE7RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLFNBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7RUFFQSxnQkFBQTtBQ0NGO0FERUE7RUFDRSx5QkFBQTtBQ0NGO0FERUE7RUFDRSwyQkFBQTtBQ0NGO0FERUE7RUFHRSwyQkFBQTtBQ0NGO0FERUEsb0JBQUE7QUFDQTtFQUNFLG1CQUFBO0FDQ0Y7QURFQTtFQUNFLGtCQUFBO0FDQ0YiLCJmaWxlIjoiLi4vLi4vc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgLyogVGhlIHN3aXRjaCAtIHRoZSBib3ggYXJvdW5kIHRoZSBzbGlkZXIgKi9cclxuLnN3aXRjaCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB3aWR0aDogNTBweDtcclxuICBoZWlnaHQ6IDI0cHg7XHJcbn1cclxuXHJcbi8qIEhpZGUgZGVmYXVsdCBIVE1MIGNoZWNrYm94ICovXHJcbi5zd2l0Y2ggaW5wdXQge1xyXG4gIG9wYWNpdHk6IDA7XHJcbiAgd2lkdGg6IDA7XHJcbiAgaGVpZ2h0OiAwO1xyXG59XHJcblxyXG4vKiBUaGUgc2xpZGVyICovXHJcbi5zbGlkZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuNHM7XHJcbiAgdHJhbnNpdGlvbjogLjRzO1xyXG59XHJcblxyXG4uc2xpZGVyOmJlZm9yZSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGNvbnRlbnQ6IFwiXCI7XHJcbiAgaGVpZ2h0OiAxNnB4O1xyXG4gIHdpZHRoOiAxNnB4O1xyXG4gIGxlZnQ6IDRweDtcclxuICBib3R0b206IDRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAtd2Via2l0LXRyYW5zaXRpb246IC40cztcclxuICB0cmFuc2l0aW9uOiAuNHM7XHJcbn1cclxuXHJcbmlucHV0OmNoZWNrZWQgKyAuc2xpZGVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NkYzO1xyXG59XHJcblxyXG5pbnB1dDpmb2N1cyArIC5zbGlkZXIge1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxcHggIzIxOTZGMztcclxufVxyXG5cclxuaW5wdXQ6Y2hlY2tlZCArIC5zbGlkZXI6YmVmb3JlIHtcclxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcclxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2cHgpO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNnB4KTtcclxufVxyXG5cclxuLyogUm91bmRlZCBzbGlkZXJzICovXHJcbi5zbGlkZXIucm91bmQge1xyXG4gIGJvcmRlci1yYWRpdXM6IDM0cHg7XHJcbn1cclxuXHJcbi5zbGlkZXIucm91bmQ6YmVmb3JlIHtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbn1cclxuIiwiLyogVGhlIHN3aXRjaCAtIHRoZSBib3ggYXJvdW5kIHRoZSBzbGlkZXIgKi9cbi5zd2l0Y2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogMjRweDtcbn1cblxuLyogSGlkZSBkZWZhdWx0IEhUTUwgY2hlY2tib3ggKi9cbi5zd2l0Y2ggaW5wdXQge1xuICBvcGFjaXR5OiAwO1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKiBUaGUgc2xpZGVyICovXG4uc2xpZGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAwLjRzO1xuICB0cmFuc2l0aW9uOiAwLjRzO1xufVxuXG4uc2xpZGVyOmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY29udGVudDogXCJcIjtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMTZweDtcbiAgbGVmdDogNHB4O1xuICBib3R0b206IDRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogMC40cztcbiAgdHJhbnNpdGlvbjogMC40cztcbn1cblxuaW5wdXQ6Y2hlY2tlZCArIC5zbGlkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NkYzO1xufVxuXG5pbnB1dDpmb2N1cyArIC5zbGlkZXIge1xuICBib3gtc2hhZG93OiAwIDAgMXB4ICMyMTk2RjM7XG59XG5cbmlucHV0OmNoZWNrZWQgKyAuc2xpZGVyOmJlZm9yZSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2cHgpO1xuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDI2cHgpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMjZweCk7XG59XG5cbi8qIFJvdW5kZWQgc2xpZGVycyAqL1xuLnNsaWRlci5yb3VuZCB7XG4gIGJvcmRlci1yYWRpdXM6IDM0cHg7XG59XG5cbi5zbGlkZXIucm91bmQ6YmVmb3JlIHtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufSJdfQ== */\"","import {Component, OnInit, Renderer2} from '@angular/core';\nimport {ColumnTable, ActionButtonTable, RowTable} from 'ngx-agile-table';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  customerColumns: ColumnTable[] = [\n    new ColumnTable('First Name', 'firstName'),\n    new ColumnTable('Last Name', 'lastName'),\n    new ColumnTable('Age', 'age'),\n    new ColumnTable('Country', 'address.country'),\n    new ColumnTable('First P.O Box', 'address.box[0].name')\n  ];\n\n  actionButtons: ActionButtonTable[] = [\n    new ActionButtonTable('delete', 'Delete')\n      .displayCondition((data) => data.amount % 300 === 0)\n      .htmlValue('<img class=\"delete-bg\" src=\"/assets/icons/trash.png\" alt=\"Image\">'),\n    new ActionButtonTable('valid', 'Valid')\n      .htmlValue('<img class=\"green-bg\" src=\"/assets/icons/confirm.png\" alt=\"Image\">'),\n    new ActionButtonTable('reject', 'Reject')\n      .htmlValue('<img class=\"red-bg\" src=\"/assets/icons/discard.png\" alt=\"Image\">'),\n    new ActionButtonTable('edit', 'Edit')\n      .htmlValue('<img class=\"edit-bg\" src=\"/assets/icons/edit.png\" alt=\"Image\">'),\n    new ActionButtonTable('see', 'See')\n      .htmlValue('<img class=\"edit-bg\" src=\"/assets/icons/eyes.png\" alt=\"Image\">'),\n    new ActionButtonTable('plug', 'Plug'),\n    new ActionButtonTable('check', 'Play')\n  ];\n\n  transactionColumns: ColumnTable[] = [\n    new ColumnTable('Date', 'date'),\n    new ColumnTable('Customer Name', 'customerName'),\n    new ColumnTable('Beneficiary Name', 'beneficiaryName'),\n    new ColumnTable('Amount', 'amount').customCell(data => '<strong>' + data + '</strong>'),\n    new ColumnTable('Fees (20% amount)', 'fees').customCell((cellData, data) => data.amount * 20 / 100 + ''),\n    new ColumnTable('Status', 'status').customCell(data => {\n      if (data === this.failStatus) {\n        return '<div style=\"display: flex; justify-content: center;\">' +\n          '<div style=\"background-color: red;height: 20px;width: 20px\"></div>' +\n          '</div>';\n      } else if (data === this.successStatus) {\n        return '<div style=\"display: flex; justify-content: center;\">' +\n          '<div style=\"background-color: green;height: 20px;width: 20px\"></div>' +\n          '</div>';\n      } else {\n        return data;\n      }\n    })\n  ];\n\n  constructor(private renderer: Renderer2) {\n\n  }\n\n  customers: any[] = [];\n  transactions: any[] = [];\n  totalPages: number = 5;\n  elementPerPage: number = 5;\n  elementPerPageList: number[] = [10, 20, 50, 100];\n  totalCustomers = 10;\n  totalTransactions = 100;\n\n  maxActionButtonPerRow = 3;\n  enableColumnSorting = false;\n  enableColumnFiltering = false;\n  localPagination = false;\n  dangerousAmountMin = 3000;\n  dangerousAmountMax = 10000;\n\n  collapseButtonPosition = 'default';\n  successStatus = 'success';\n  failStatus = 'fail';\n\n  ngOnInit() {\n    const fakeCustomers = [];\n    for (let i = 1; i <= this.totalCustomers; i++) {\n      fakeCustomers.push({\n        firstName: 'Romeo ' + i,\n        lastName: 'Klaus ' + i ,\n        age: 5 + i,\n        address: {\n          country: 'Contry ' + i,\n          city: 'City ' + i,\n          box: [\n            {\n              name: 'P.O box : ' + i,\n              code: (i * 7)\n            },\n            {\n              name: 'P.O box : ' + (i * 2),\n              code: (i * 4)\n            }\n          ]\n        }\n      });\n    }\n\n    this.customers = fakeCustomers;\n\n    const fakeTransactions = [];\n    for (let i = 1; i <= this.totalTransactions; i++) {\n      fakeTransactions.push({\n        customerName: 'Romeo ' + i ,\n        beneficiaryName: 'Klaus ' + i ,\n        date: new Date().toISOString().replace('T', ' ').replace('Z', ''),\n        amount: Math.floor(10 * Math.random() + 1) * 500,\n        status: Math.floor(10 * Math.random()) % 2 === 0 ? this.successStatus : this.failStatus\n      });\n    }\n\n    this.transactions = fakeTransactions;\n  }\n\n  onActionButtonClicked(actionButton: ActionButtonTable) {\n    switch (actionButton.key) {\n      case 'edit':\n        alert('Trying to edit transaction customer : ' + actionButton.targetData.customerName);\n        break;\n      case 'delete':\n        alert('Trying to delete transaction customer : ' + actionButton.targetData.customerName);\n        break;\n      default:\n        alert('Action button \"' + actionButton.key + '\" not implemented');\n        break;\n    }\n  }\n\n  onRowDisplayed(row: RowTable) {\n    // Manipulate via Renderer2\n    if (this.dangerousAmountMin <= row.data.amount && row.data.amount <= this.dangerousAmountMax) {\n     this.renderer.addClass(row.nativeElement, 'row-danger');\n    }\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport {NgxAgileTableModule} from 'ngx-agile-table';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxAgileTableModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}